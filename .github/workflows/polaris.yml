name: Fix Sarif Issue 

# Controls when the workflow will run
on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: [ ubuntu-latest ]
    runs-on: [ self-hosted ]
    # Use ubuntu-latest to run workflow on github hosted runner
    # runs-on: [ ubuntu-latest ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Polaris Scan
        # if: ${{ github.event_name != 'pull_request' }}
        # Use the action defined in this repository
        uses: synopsys-sig/synopsys-action@SIGINT-2056-latest
        with:
          srm_url: ${{ vars.SRM_URL }}
          srm_apikey: ${{ secrets.SRM_API_KEY }}
          srm_assessment_types: "SCA,SAST"
          srm_project_name: "test_action"
          srm_project_id: 12
          srm_branch_name: "test"
          srm_branch_parent: "main"
          
          blackduck_execution_path: "/home/maruf/.synopsys/bridge/tools/synopsys-detect/9.8.0/synopsys-detect-9.8.0.jar"
          coverity_execution_path: "/home/maruf/.synopsys/bridge/tools/cov-thin-client/2023.9.2/bin/coverity"
          project_directory: "/home/maruf/node-goat"

          coverity_build_command: "mvn clean install"
          coverity_clean_command: "mvn clean"
          coverity_config_path: "/home/maruf/SynopsysTestConfig/application.properties"
          coverity_args: "-c  /home/maruf/SynopsysTestConfig/coverity.yml -o capture.build.clean-command=\"mvn clean\" -- mvn clean install"

          blackduck_search_depth: "1"
          blackduck_args: "/home/maruf/SynopsysTestConfig/application.properties"
          blackduck_config_path: "--detect.diagnostic=true"

          
          include_diagnostics: true

          # POLARIS_ACCESS_TOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN_E2E }}
          # POLARIS_APPLICATION_NAME: 'E2E-Integration-App'
          # POLARIS_PROJECT_NAME: 'TestProject'
        
          # polaris_server_url: ${{ vars.POLARIS_SERVER_URL }}
          # polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          # polaris_application_name: 'test_ado'
          # polaris_project_name: 'test_ado'
          # polaris_assessment_types: "SCA"
          # polaris_branch_name: "main"
          # polaris_reports_sarif_create: true
          # polaris_upload_sarif_report: true
          # github_token: ${{ secrets.GITHUBTOKEN }}
          
          # include_diagnostics: true
